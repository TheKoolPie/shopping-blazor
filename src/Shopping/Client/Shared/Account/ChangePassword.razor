@inject IAuthService AuthService

<div class="container">
    <div class="row">
        <div class="col">
            @if (IsLoading)
            {
                <CustomSpinner>
                    Loading change password component
                </CustomSpinner>
            }
            else
            {
                @if (IsChangingPassword)
                {
                    <CustomSpinner>
                        Changing password...
                    </CustomSpinner>
                }
                else
                {
                    <AlertComponent Model="changePasswordDataAlert" />
                    <div class="row">
                        <div class="col">
                            <EditForm EditContext="changePasswordContext" OnSubmit="OnChangePassword" autocomplete="off">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <label for="oldpassword">Current Password</label>
                                    <InputText Id="oldpassword" type="password" class="form-control" @bind-Value="changePassworModel.CurrentPassword" />
                                </div>
                                <div class="form-group">
                                    <label for="newpassword">New Password</label>
                                    <InputText Id="newpassword" type="password" class="form-control" @bind-Value="changePassworModel.NewPassword" />
                                </div>
                                <div class="form-group">
                                    <label for="confirmnewpassword">Confirm New Password</label>
                                    <InputText Id="confirmnewpassword" type="password" class="form-control" @bind-Value="changePassworModel.NewConfirmPassword" />
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col">
                                        <div class="form-group">
                                            <button class="btn btn-primary">Change Password</button>
                                        </div>
                                    </div>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public ShoppingUserModel CurrentUser { get; set; }

    bool IsLoading;

    AlertComponentModel changePasswordDataAlert;
    bool IsChangingPassword;
    ChangePasswordModel changePassworModel = new ChangePasswordModel();
    EditContext changePasswordContext;

    protected override void OnInitialized()
    {
        IsLoading = true;
        changePassworModel.UserId = CurrentUser.Id;
        changePasswordContext = new EditContext(changePassworModel);
        IsLoading = false;
    }

    private async Task OnChangePassword()
    {
        IsChangingPassword = true;
        if (changePasswordContext.Validate())
        {
            var changeResult = await AuthService.ChangePassword(changePassworModel);
            if (changeResult.IsSuccessful)
            {
                changePasswordDataAlert = AlertComponentModel.CreateSuccessAlert("Changed password");
            }
            else
            {
                changePasswordDataAlert = AlertComponentModel.CreateErrorAlert("Could not change password", changeResult.CompleteErrorMessage);
            }
            changePassworModel = new ChangePasswordModel() { UserId = CurrentUser.Id };
        }
        IsChangingPassword = false;
    }
}
