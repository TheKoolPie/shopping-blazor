@inject IUserGroupRepository UserGroups

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col">
                <h5 class="card-title">Delete user group</h5>
            </div>
            @if (DeleteError != null)
            {
                <AlertComponent Model="DeleteError" />
            }
            else
            {
                <div class="col">
                    @if (deleteBtnClicked)
                    {
                        <button type="button" class="btn btn-secondary" @onclick="(() =>
                                                                              {
                                                                                  deleteBtnClicked = false;
                                                                                  showDeleteBtn = false;
                                                                              })">
                            <span class="oi oi-ban" /> Cancel
                        </button>
                    }
                </div>
            }
        </div>
        @if (DeleteError == null)
        {
            <p class="card-text">
                @if (!deleteBtnClicked)
                {
                    <button type="button" class="btn btn-danger" @onclick="(() => deleteBtnClicked = !deleteBtnClicked)">
                        <span class="oi oi-trash" /> Delete list
                    </button>
                }
                else
                {
                    <hr />
                    <div class="row">
                        <div class="col">
                            <div>
                                If you delete this group all assignments between shopping lists and this group will be removed.<br />
                                Also all set standard user group ids from users will be unset.
                                Please confirm your decision, as this action is not revokeable.
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" @onchange="(() => showDeleteBtn = !showDeleteBtn)" value="" id="deleteCheck">
                                <label class="form-check-label" for="deleteCheck">I really want to to delete!</label>
                            </div>
                        </div>
                    </div>
                    @if (showDeleteBtn)
                    {
                        <hr />
                        <div class="row">
                            <div class="col">
                                <button type="button" class="btn btn-danger" @onclick="OnDeleteUserGroup">
                                    <span class="oi oi-trash" /> Delete list
                                </button>
                            </div>
                        </div>
                    }
                }
            </p>
        }
    </div>
</div>

@code {
    [Parameter]
    public string UserGroupId { get; set; }
    [Parameter]
    public EventCallback OnUserGroupDeleted { get; set; }

    AlertComponentModel DeleteError;

    bool deleteBtnClicked = false;
    bool showDeleteBtn = false;

    protected override void OnInitialized()
    {
        DeleteError = string.IsNullOrEmpty(UserGroupId) ? AlertComponentModel.CreateErrorAlert("No user group id provided") : null;
    }

    private async Task OnDeleteUserGroup()
    {
        if (await UserGroups.DeleteByIdAsync(UserGroupId))
        {
            await OnUserGroupDeleted.InvokeAsync(null);
        }
        else
        {
            DeleteError = AlertComponentModel.CreateErrorAlert("Could not delete user group");
        }
    }
}
