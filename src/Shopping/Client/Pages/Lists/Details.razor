@page "/lists/details/{id}"

@attribute [Authorize]
@inject IShoppingLists ShoppingListRepo
@inject IProducts ProductRepo

<AlertComponent Model="@LoadingAlertModel" />
@if (LoadingAlertModel == null)
{
    @if (IsLoading)
    {
        <div class="row">
            <div class="col">
                <strong>Loading data...</strong>
            </div>
        </div>
    }
    else
    {
        <h3>Details of @CurrentList.Name</h3>
        <hr />

        <div class="row">
            <div class="col">
                <div class="list-group list-group-horizontal-md" id="list-tab" role="tablist">
                    <a class="list-group-item list-group-item-action active" id="list-overview-list" data-toggle="list" href="#list-overview" role="tab" aria-controls="overview">
                        <span class="oi oi-list-rich"></span> Overview
                    </a>
                    <a class="list-group-item list-group-item-action" id="list-addItems-list" data-toggle="list" href="#list-addItems" role="tab" aria-controls="addItems">
                        <span class="oi oi-plus"></span> Add Items
                    </a>
                    <a class="list-group-item list-group-item-action" id="list-access-list" data-toggle="list" href="#list-access" role="tab" aria-controls="access">
                        <span class="oi oi-lock-locked"></span> Access
                    </a>
                    <a class="list-group-item list-group-item-action" id="list-properties-list" data-toggle="list" href="#list-properties" role="tab" aria-controls="properties">
                        <span class="oi oi-cog"></span> Properties
                    </a>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col">
                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active" id="list-overview" role="tabpanel" aria-labelledby="list-overview-list">
                        <h4>Overview</h4>
                    </div>
                    <div class="tab-pane fade" id="list-addItems" role="tabpanel" aria-labelledby="list-addItems-list">
                        <h4>Add Items</h4>
                        <EditForm EditContext="addItemEditContext" OnSubmit="HandleAddItemSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <SearchableInput ValueOptions="products.ToDictionary(x=>x.Id,x=>x.Name)" 
                                                 Label="Product"
                                                 Placeholder="Search Products..." />
                            </div>
                        </EditForm>
                    </div>
                    <div class="tab-pane fade" id="list-access" role="tabpanel" aria-labelledby="list-access-list">
                        <h4>Access</h4>
                    </div>
                    <div class="tab-pane fade" id="list-properties" role="tabpanel" aria-labelledby="list-properties-list">
                        <h4>Properties</h4>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string Id { get; set; }

    AlertComponentModel LoadingAlertModel = null;
    private bool IsLoading { get; set; }

    private ShoppingList CurrentList;

    #region AddItem
    private ShoppingListItem addItem = new ShoppingListItem();
    private EditContext addItemEditContext;
    private List<ProductItem> products = new List<ProductItem>();
    #endregion

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        LoadingAlertModel = null;
        CurrentList = await ShoppingListRepo.GetAsync(Id);
        if (CurrentList == null)
        {
            LoadingAlertModel = AlertComponentModel.CreateErrorAlert("Error loading list",
                $"List with id {Id} does not exist or it does not belong to you.");
        }
        else
        {
            products = await ProductRepo.GetAllAsync();
            addItemEditContext = new EditContext(addItem);
        }

        IsLoading = false;
    }

    private void HandleAddItemSubmit()
    {

    }
}
