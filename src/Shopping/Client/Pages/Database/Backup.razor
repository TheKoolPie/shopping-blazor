@page "/database/backup"

@inject IShoppingRepoBackup BackupService

@attribute [Authorize(Policy = ShoppingUserPolicies.IsDatabaseManager)]

<h3>Import</h3>
<hr />

<AlertComponent Model="importError" />

@if (IsProcessing)
{
    <CustomSpinner>
        Processing data...
    </CustomSpinner>
}
else if (IsImporting)
{
    <CustomSpinner>
        Importing data...
    </CustomSpinner>
}
else
{
    <InputFile OnChange="HandleFileSelected" />
    <hr />
    @if (serializedModel != null)
    {
        <div class="row">
            <div class="col">
                <h5>
                    Processed Backup Data
                    <button class="btn btn-secondary" @onclick="HandleReset">
                        <span class="oi oi-x" />
                    </button>
                </h5>
            </div>
        </div>
        <div class="row">
            <div class="col">

                <ul class="list-group">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Categories
                        <span class="badge badge-primary badge-pill">@serializedModel.Categories.Count</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Products
                        <span class="badge badge-primary badge-pill">@serializedModel.Products.Count</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        User Groups
                        <span class="badge badge-primary badge-pill">@serializedModel.UserGroups.Count</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Shopping Lists
                        <span class="badge badge-primary badge-pill">@serializedModel.ShoppingLists.Count</span>
                    </li>
                </ul>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col">
                <button class="btn btn-primary" @onclick="HandleUpload">
                    <span class="oi oi-cloud-upload" /> Upload
                </button>
            </div>
        </div>
    }
}
@code {
    ShoppingDataSerializationModel serializedModel;
    bool IsProcessing;
    bool IsImporting;

    AlertComponentModel importError;

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        IsProcessing = true;
        var file = files.FirstOrDefault();
        if (file != null)
        {
            if (file.Type.Contains("json"))
            {
                using (System.IO.StreamReader sr = new System.IO.StreamReader(file.Data))
                {
                    var streamContent = await sr.ReadToEndAsync();
                    serializedModel = System.Text.Json.JsonSerializer.Deserialize<ShoppingDataSerializationModel>(streamContent);
                }
            }
        }
        IsProcessing = false;
    }
    private async Task HandleUpload()
    {
        IsImporting = true;
        try
        {
            await BackupService.ImportDataAsync(serializedModel);
        }
        catch (Exception e)
        {
            importError = AlertComponentModel.CreateErrorAlert("Could not import data", e.Message);
        }
        serializedModel = null;
        IsImporting = false;
    }
    private void HandleReset()
    {
        serializedModel = null;
    }
}
